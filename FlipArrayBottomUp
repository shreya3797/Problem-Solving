int Solution::solve(const vector<int> &A) {    
    int n = A.size();    
    int sum = 0;
    for (int i = 0; i < n; i++) {
        sum += A[i];
    }
    sum /= 2;
    vector<vector<int>> dp(n+1, vector<int>(sum+1, 0));
    for (int i = 0; i <= sum; i++) {
        dp[0][i] = INT_MAX-1;
    }
    dp[0][0] = 0;
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= sum; j++) {
            if (j >= A[i-1]) {                
                dp[i][j] = min(dp[i-1][j-A[i-1]] + 1, dp[i-1][j]);                
            }
            else {
                dp[i][j] = dp[i-1][j];                
            }
        }
    }
    while (sum > 0 && dp[n][sum] == INT_MAX - 1) {
        sum--;
    }
    return dp[n][sum];
}
