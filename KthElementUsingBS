int Solution::solve(const vector<int> &A, int B) {
    int n = A.size();
    int minElement = INT_MAX;
    int maxElement = INT_MIN;
    for (int i = 0; i < n; i++) {
        minElement = min(minElement, A[i]);
        maxElement = max(maxElement, A[i]);
    }
    int l = minElement;
    int r = maxElement;
    if (B == 1) return minElement;
    if (B == n) return maxElement;
    while (l <= r) {
        int mid = (l+r)/2;
        int countSmaller = 0;
        int countEqual = 0;
        for (int i = 0; i < n; i++) {
            if (A[i] < mid) {
                countSmaller++;
            } 
            if (A[i] == mid) {
                countEqual++;
            }                        
        }        
        if (countSmaller >= B) {
            r = mid - 1;
        } else if (countSmaller < B && countSmaller + countEqual >= B) {
            return mid;
        } else {
            l = mid + 1;
        }
    }
    return 0;
}
